from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
import time
from selenium import webdriver
from selenium.common import NoSuchElementException, StaleElementReferenceException, TimeoutException
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
import logging


def iframeHandler(driver, title=None, default=False):
    time.sleep(7)
    if title:
        iframes = driver.find_elements(By.TAG_NAME, "iframe")
        for frame in iframes:
            if frame.get_attribute("title") == title:
                driver.switch_to.frame(frame)
                logging.info("Switching to iframe : {}".format(title))
                break
    if default:
        driver.switch_to.default_content()
        logging.info("Switching to iframe : Default")


def talkdeskLogin(driver, userEmail, password):
    for count in range(3):
        driver.get("https://sanasai.talkdeskid.com/login")
        WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, "//input[@placeholder='email@company.com']"))).send_keys(userEmail)
        driver.find_element(By.XPATH, "//input[@placeholder='password']").send_keys(password)
        driver.find_element(By.XPATH, "//button[@type='submit']").click()
        try:
            if driver.find_element(By.XPATH, "//div[@class='co-message__content']"):
                logging.info("Trying to Log in for {} time".format(count + 1))
            if count == 2:
                logging.error("Login Unsuccessful")
                return
        except:
            logging.info("Login Successful")
            return


def createNewSession(driver, overRidingSession=True):
    try:
        if overRidingSession:
            iframeHandler(driver, title='Conversations')
            WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.XPATH, "//span[normalize-space()='Start new session']"))).click()
            logging.info("Started new Session since it was used on other system")
            iframeHandler(driver, default=True)
            popUpClose(driver)
    except (NoSuchElementException,TimeoutException):
        logging.info("No Session is logged in before")


def permissionAccess():
    preferences = {
        "profile.default_content_setting_values.media_stream_mic": 1  # 1 to allow, 2 to block
    }
    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_experimental_option("prefs", preferences)
    return chrome_options


def popUpClose(driver):
    try:
        driver.find_element(By.XPATH,
                            "(//i[contains(@class,'react-icon_1-10-2_co-icon react-icon_1-10-2_co-icon--small')])[6]").click()
    except (NoSuchElementException,TimeoutException):
        logging.info("Pop up not found")


def main():
    chrome_options = permissionAccess()
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
    talkdeskLogin(driver, "namrata@sanas.ai", "Sanas@123")
    # Navigate to the specified URL
    driver.maximize_window()
    time.sleep(10)
    WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[@aria-label='Conversations']"))).click()
    createNewSession(driver)
    WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[@aria-label='Activities']"))).click()

    try:
        time.sleep(10)
        print("sleep done")
        iframeHandler(driver, "Activities")
        conversationIDList = []
        while not conversationIDList:
            for i in range(10):
                xpath = '/html[1]/body[1]/div[1]/div[1]/div[1]/div[1]/div[4]/table[1]/tbody[1]/tr[' + str(
                    i + 1) + ']/td[2]/div[1]/p[1]'
                elements = driver.find_element(By.XPATH, xpath)
                elements.click()
                time.sleep(5)
                try:
                    conversation = driver.find_element(By.XPATH,
                                                       "/html/body/div/div/div[2]/div/div[3]/div/div/div[3]/div/div/div[1]/table/tbody/tr[8]/td/div/div[1]/div/div/div/p").text
                    if conversation in conversationIDList:
                        driver.find_element(By.XPATH, "//i[normalize-space()='download']").click()
                        logging.info("Downloaded file for converstion ID {}".format(conversation))
                        conversationIDList.remove(conversation)
                except NoSuchElementException:
                    logging.info("conversation ID was not found")
                try:
                    driver.find_element(By.XPATH, "//i[normalize-space()='close']").click()
                except:
                    logging.info("Close is not found ")

                finally:
                    if not conversationIDList:
                        break
                time.sleep(5)
            # Next page
            driver.find_element(By.XPATH, "/html/body/div/div/div[1]/div/div[6]/div[1]/nav/a[2]/span[1]").click()
        driver.quit()
    except NoSuchElementException:
        logging.error("failed due to no element exception")


if __name__ == "__main__":
    main()
